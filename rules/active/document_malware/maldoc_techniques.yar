rule suspicious_office_macros {
    meta:
        description = "Detects suspicious behaviors in Office document macros"
        author = "Security Team"
        date = "2025-04-24"
        version = "1.0"
        reference = "Internal research on malicious document techniques"
    
    strings:
        // Shell execution
        $shell1 = "Shell" nocase
        $shell2 = "WScript.Shell" nocase
        $shell3 = "ShellExecute" nocase
        $shell4 = "Wscript.Shell.Run" nocase
        
        // PowerShell execution
        $ps1 = "powershell" nocase
        $ps2 = "-enc" nocase
        $ps3 = "-encodedcommand" nocase
        $ps4 = "-windowstyle hidden" nocase
        $ps5 = "-noprofile" nocase
        
        // Suspicious VBA functions
        $vba1 = "CreateObject" nocase
        $vba2 = "CallByName" nocase
        $vba3 = "GetObject" nocase
        $vba4 = "URLDownloadToFile" nocase
        $vba5 = "DownloadFile" nocase
        $vba6 = "Environ(" nocase
        
        // Auto-execution triggers
        $auto1 = "Document_Open" nocase
        $auto2 = "AutoOpen" nocase
        $auto3 = "Auto_Open" nocase
        $auto4 = "DocumentOpen" nocase
        $auto5 = "Workbook_Open" nocase
        
        // Obfuscation techniques
        $obf1 = "Chr(" nocase
        $obf2 = "Chr$(" nocase
        $obf3 = "^ " nocase
        $obf4 = "ChrW(" nocase
        $obf5 = "StrReverse" nocase
        $obf6 = "Mid(" nocase
        $obf7 = "xor" nocase
        
        // Suspicious strings
        $sus1 = "ActiveX" nocase
        $sus2 = "RegRead" nocase
        $sus3 = "RegWrite" nocase
        $sus4 = "DllRegisterServer" nocase
    
    condition:
        // Document file types
        (uint32be(0) == 0xD0CF11E0 or // OLE document
         uint32be(0) == 0x504B0304) and // OOXML document (DOCX, XLSX, etc.)
        (
            // Auto execution with suspicious behavior
            (1 of ($auto*) and (1 of ($shell*) or 1 of ($ps*))) or
            // Obfuscation with suspicious functions
            (2 of ($obf*) and 2 of ($vba*)) or
            // PowerShell execution 
            (1 of ($ps*) and 2 of ($vba*)) or
            // Multiple suspicious behaviors
            (2 of ($shell*) and 2 of ($sus*) and 1 of ($vba*))
        )
}

rule suspicious_pdf_javascript {
    meta:
        description = "Detects suspicious JavaScript in PDF files"
        author = "Security Team"
        date = "2025-04-24"
        version = "1.0"
        reference = "Internal research on malicious PDF techniques"
    
    strings:
        // PDF header/trailer
        $pdf_magic = "%PDF-"
        $trailer = "trailer"
        
        // JavaScript tags
        $js_tag1 = "/JavaScript"
        $js_tag2 = "/JS"
        
        // Suspicious JavaScript functions
        $js_func1 = "eval("
        $js_func2 = "unescape("
        $js_func3 = "String.fromCharCode("
        $js_func4 = ".getAnnots"
        $js_func5 = "getIcon"
        $js_func6 = "util.byteToChar"
        $js_func7 = "this.getField"
        
        // Suspicious PDF actions
        $action1 = "/AA"
        $action2 = "/OpenAction"
        $action3 = "/Launch"
        $action4 = "/URI"
        $action5 = "/SubmitForm"
        $action6 = "/GoToR"
        
        // Exploit related
        $exploit1 = "CVE-" wide ascii
        $exploit2 = "CollectEmailInfo"
        $exploit3 = "util.printf"
        $exploit4 = "Collab.collectEmailInfo"
        $exploit5 = "Collab.getIcon"
        $exploit6 = "app.viewerVersion"
        
        // Obfuscation
        $obf1 = "concat"
        $obf2 = "replace"
        $obf3 = "substring"
        $obf4 = "charAt"
        $obf5 = "indexOf"
    
    condition:
        $pdf_magic at 0 and $trailer and 
        (
            // JavaScript with suspicious functions
            (1 of ($js_tag*) and 2 of ($js_func*)) or
            // Suspicious actions with JavaScript
            (2 of ($action*) and 1 of ($js_tag*)) or
            // Potential exploit code
            (1 of ($js_tag*) and 2 of ($exploit*)) or
            // Heavy obfuscation with JavaScript
            (1 of ($js_tag*) and 3 of ($obf*) and 1 of ($js_func*))
        )
}

rule html_smuggling {
    meta:
        description = "Detects HTML smuggling techniques used to deliver malicious files"
        author = "Security Team"
        date = "2025-04-24"
        version = "1.0"
        reference = "Internal research on HTML smuggling"
    
    strings:
        // HTML document indicators
        $html1 = "<!DOCTYPE html" nocase
        $html2 = "<html" nocase
        
        // Data encoding
        $enc1 = "base64," nocase
        $enc2 = "data:application/"
        $enc3 = "atob(" nocase
        $enc4 = "btoa(" nocase
        $enc5 = "fromCharCode" nocase
        $enc6 = "unescape(" nocase
        
        // Blob creation and usage
        $blob1 = "new Blob" nocase
        $blob2 = "createObjectURL" nocase
        $blob3 = "URL.createObject" nocase
        $blob4 = "MSBlobBuilder" nocase
        $blob5 = "BlobBuilder" nocase
        
        // File creation and downloading
        $file1 = "saveAs(" nocase
        $file2 = "FileSaver" nocase
        $file3 = "download=" nocase
        $file4 = "application/octet-stream" nocase
        $file5 = "msSaveBlob" nocase
        $file6 = "a.download" nocase
        
        // Suspicious script patterns
        $script1 = "<script>" nocase
        $script2 = "document.write" nocase
        $script3 = "appendChild" nocase
        $script4 = "createElement" nocase
        $script5 = "setAttribute" nocase
    
    condition:
        (1 of ($html*)) and
        (
            // Data encoding with blob creation and file download
            (2 of ($enc*) and 1 of ($blob*) and 1 of ($file*)) or
            // Script manipulation with encoding
            (2 of ($script*) and 2 of ($enc*)) or
            // Blob usage with file saving
            (2 of ($blob*) and 2 of ($file*))
        )
}
