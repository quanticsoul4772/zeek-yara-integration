<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="33" time="8.920" timestamp="2025-08-01T12:10:33.145502-07:00" hostname="Russells-MacBook-Pro.local"><testcase classname="tests.integration_tests.test_suricata_integration.TestSuricataIntegration" name="test_pcap_analysis" time="0.464" /><testcase classname="tests.integration_tests.test_suricata_integration.TestSuricataIntegration" name="test_rule_management" time="1.483" /><testcase classname="tests.integration_tests.test_suricata_integration.TestSuricataIntegration" name="test_alert_storage_and_retrieval" time="0.003" /><testcase classname="tests.integration_tests.test_suricata_integration.TestSuricataIntegration" name="test_integration_with_correlation" time="0.005" /><testcase classname="tests.performance_tests.test_suricata_performance.TestSuricataPerformance" name="test_alert_retrieval_performance" time="0.016" /><testcase classname="tests.performance_tests.test_suricata_performance.TestSuricataPerformance" name="test_alert_filtering_performance" time="0.014" /><testcase classname="tests.performance_tests.test_suricata_performance.TestSuricataPerformance" name="test_correlation_performance" time="0.536" /><testcase classname="tests.performance_tests.test_suricata_performance.TestSuricataPerformance" name="test_database_write_performance" time="0.006" /><testcase classname="tests.performance_tests.test_suricata_performance.TestSuricataPerformance" name="test_process_alerts_performance" time="0.008" /><testcase classname="tests.test_database.TestDatabaseManager" name="test_initialization" time="0.001" /><testcase classname="tests.test_database.TestDatabaseManager" name="test_add_alert" time="0.001" /><testcase classname="tests.test_database.TestDatabaseManager" name="test_bulk_insert_alerts" time="0.001" /><testcase classname="tests.test_database.TestDatabaseManager" name="test_get_alerts_with_limit" time="0.001" /><testcase classname="tests.test_database.TestDatabaseManager" name="test_connection_pool" time="0.000" /><testcase classname="tests.test_database.TestDatabasePerformance" name="test_single_vs_bulk_insert_performance" time="0.016" /><testcase classname="tests.test_database.TestDatabasePerformance" name="test_query_performance" time="0.013" /><testcase classname="tests.test_database.TestDatabasePerformance" name="test_performance_tracking_decorator" time="0.106" /><testcase classname="tests.test_file_analyzer.TestFileAnalyzer" name="test_initialization" time="0.000" /><testcase classname="tests.test_file_analyzer.TestFileAnalyzer" name="test_file_size_check" time="0.002" /><testcase classname="tests.test_file_analyzer.TestFileAnalyzer" name="test_mime_type_detection" time="0.018" /><testcase classname="tests.test_file_analyzer.TestFileAnalyzer" name="test_file_type_detection" time="0.004" /><testcase classname="tests.test_file_analyzer.TestFileAnalyzer" name="test_metadata_extraction" time="0.001" /><testcase classname="tests.test_file_analyzer.TestFileAnalyzer" name="test_file_categorization" time="0.000" /><testcase classname="tests.test_file_analyzer.TestFileAnalyzerPerformance" name="test_lru_cache_performance" time="0.002" /><testcase classname="tests.test_file_analyzer.TestFileAnalyzerPerformance" name="test_metadata_extraction_performance" time="0.002" /><testcase classname="tests.test_file_analyzer.TestFileAnalyzerPerformance" name="test_performance_tracking_decorator" time="0.002" /><testcase classname="tests.test_scanner.TestScanner" name="test_single_thread_scanner_initialization" time="0.002" /><testcase classname="tests.test_scanner.TestScanner" name="test_multi_thread_scanner_initialization" time="0.002" /><testcase classname="tests.test_scanner.TestScanner" name="test_scan_file" time="0.003" /><testcase classname="tests.test_scanner.TestScanner" name="test_scan_directory" time="0.004" /><testcase classname="tests.test_scanner.TestScanner" name="test_file_event_handler" time="1.008" /><testcase classname="tests.test_scanner.TestScannerIntegration" name="test_monitoring_workflow" time="5.056" /><testcase classname="tests.test_scanner.TestScannerIntegration" name="test_eicar_detection" time="0.009"><failure message="AssertionError: assert False is True&#10; +  where False = &lt;built-in method get of dict object at 0x108bb6140&gt;('matched', False)&#10; +    where &lt;built-in method get of dict object at 0x108bb6140&gt; = {'error': 'No YARA rules available', 'file_path': '/var/folders/5j/294yqb1947qfljrtqy6cgtrr0000gn/T/tmpdr30l0d5/eicar.txt', 'matched': False, 'matches': [], ...}.get">self = &lt;test_scanner.TestScannerIntegration object at 0x107105e80&gt;
config = {'DB_FILE': '/var/folders/5j/294yqb1947qfljrtqy6cgtrr0000gn/T/tmp4k5qwczl/zeek_yara_test.db', 'EXTRACT_DIR': '/var/fol...sellsmith/zeek_yara_integration/logs', 'LOG_FILE': '/Users/russellsmith/zeek_yara_integration/logs/yara_scan.log', ...}

    def test_eicar_detection(self, config):
        """Test detection of EICAR test file"""
        # Initialize scanner
        # Enable debug logging
        logging.getLogger("zeek_yara").setLevel(logging.DEBUG)
        scanner = SingleThreadScanner(config)
    
        # Create EICAR test file
        temp_dir = tempfile.mkdtemp()
        eicar_path = os.path.join(temp_dir, "eicar.txt")
        # Get absolute path to ensure consistency
        eicar_path = os.path.abspath(eicar_path)
    
        eicar_content = "X5O!P%@AP[4\\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"
        with open(eicar_path, "w") as f:
            f.write(eicar_content)
    
        try:
            # Manually get file metadata for debugging
            file_analyzer = scanner.file_analyzer
            metadata = file_analyzer.get_file_metadata(eicar_path)
            print(f"DEBUG: File metadata for {eicar_path}:\n{metadata}")
    
            # Scan file
            result = scanner.scan_file(eicar_path)
    
            # Check result
&gt;           assert result.get("matched", False) is True
E           AssertionError: assert False is True
E            +  where False = &lt;built-in method get of dict object at 0x108bb6140&gt;('matched', False)
E            +    where &lt;built-in method get of dict object at 0x108bb6140&gt; = {'error': 'No YARA rules available', 'file_path': '/var/folders/5j/294yqb1947qfljrtqy6cgtrr0000gn/T/tmpdr30l0d5/eicar.txt', 'matched': False, 'matches': [], ...}.get

tests/test_scanner.py:211: AssertionError</failure></testcase></testsuite></testsuites>