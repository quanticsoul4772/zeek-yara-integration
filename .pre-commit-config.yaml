# Pre-commit hooks configuration for Zeek-YARA Integration
# See https://pre-commit.com for more information

repos:
  # Standard Python code quality checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-docstring-first

  # Black code formatting
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        args: [--line-length=88]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black]

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [--skip=B101,B601]  # Skip assert and shell usage warnings for educational code

  # Custom hooks for project-specific requirements
  - repo: local
    hooks:
      # Prevent py.typed files from being committed
      - id: prevent-py-typed
        name: Prevent py.typed files
        entry: 'py.typed files can cause performance issues'
        language: fail
        files: 'py\.typed$'
        
      # Prevent committing large log files
      - id: prevent-large-logs
        name: Prevent large log files
        entry: 'Large log files should not be committed'
        language: fail
        files: '\.log$'
        exclude: 'tests/.*\.log$'  # Allow small test log files
        
      # Check for hardcoded credentials
      - id: check-credentials
        name: Check for hardcoded credentials
        entry: bash -c 'if grep -r --include="*.py" --include="*.yaml" --include="*.json" -E "(password|secret|key|token)\s*[:=]\s*[\"'\''][^\"'\'']{8,}" .; then echo "Potential hardcoded credentials found"; exit 1; fi'
        language: system
        pass_filenames: false
        
      # Ensure test files follow naming convention
      - id: test-naming
        name: Test file naming convention
        entry: 'Test files should start with test_ or end with _test.py'
        language: fail
        files: 'tests/.*\.py$'
        exclude: '(test_.*\.py|.*_test\.py|__init__\.py|conftest\.py)$'
        
      # Check for educational code safety
      - id: educational-safety
        name: Educational code safety check
        entry: bash -c 'if grep -r --include="*.py" -E "(exec|eval|compile)\s*\(" . --exclude-dir=.git; then echo "Potentially unsafe functions found in educational code"; exit 1; fi'
        language: system
        pass_filenames: false
        exclude: '(tests/.*|scripts/.*|packaging/.*)'

  # Documentation and markdown checks
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.0
    hooks:
      - id: prettier
        types: [markdown]
        exclude: '^(CHANGELOG\.md|.*\.template\.md)$'

  # YAML validation
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.32.0
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yaml]

# Configuration for running hooks
default_install_hook_types: [pre-commit, pre-push]
fail_fast: false
minimum_pre_commit_version: '2.20.0'